-- vi: ft=lua
--
-- See http://i3wm.org/docs/user-contributed/conky-i3bar.html

local json = require( "json" )

conky.config = {
    out_to_x = false,
    own_window = false,
    out_to_console = true,
    background = false,
    max_text_width = 0,

    -- Update interval in seconds
    update_interval = 2.0,

    -- This is the number of times Conky will update before quitting.
    -- Set to zero to run forever.
    total_run_times = 0,

    -- Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
    short_units = true,

    -- How strict should if_up be when testing an interface for being up?
    -- The value is one of up, link or address, to check for the interface
    -- being solely up, being up and having link or being up, having link
    -- and an assigned IP address. 
    if_up_strictness = 'address',

    -- Add spaces to keep things from moving about?  This only affects certain objects.
    -- use_spacer should have an argument of left, right, or none
    use_spacer = 'left',

    -- Force UTF8? note that UTF8 support required XFT
    override_utf8_locale = false,

    -- number of cpu samples to average
    -- set to 1 to disable averaging
    cpu_avg_samples = 2,
};

-- Colors
local NORMAL = '#888888'
local WARN = '#ff0000'
local HIGHLIGHT = '#ffffff'

-- Network devices
local WLAN_DEVICE = "wlp4s0"
local WIRED_DEVICE = "enp0s31f6"

-- Symbols from FontAwesome
local BATTERY_EMPTY = "\u{f244}"
local BATTERY_QUARTER = "\u{f243}"
local BATTERY_HALF = "\u{f242}"
local BATTERY_THREE_QUARTERS = "\u{f241}"
local BATTERY_FULL = "\u{f240}"

local PLUG = "\u{f1e6}"

local WIFI = "\u{f1eb}"

-- 

function network_details( device )
    return "(${addr " .. device .. "}) ↓${downspeed " .. device .. "} ↑${upspeed " .. device .. "} ${if_up tun0}(VPN)${endif}" 
end

-- Adding sensors
local text = {}

local cpu = {}
cpu.full_text = "CPU (${freq_g}GHz) ${cpu cpu1}% ${cpu cpu2}% ${cpu cpu3}% ${cpu cpu4}% ${cpu cpu5}% ${cpu cpu6}% ${cpu cpu7}% ${cpu cpu8}%"
cpu.short_text = "CPU (${freq_g}GHz) ${cpu cpu0}%"
cpu.color = NORMAL
table.insert( text, cpu )

local memory = {}
memory.full_text = " RAM ${mem} (${memperc}%) "
memory.color = "${if_match ${memperc} < 90 }" .. NORMAL .. "${else}" .. WARN .. "${endif}"
table.insert( text, memory )

local battery = {}
battery.full_text = "${if_existing /sys/class/power_supply/AC/online 1} " .. PLUG .. " ${else} " .. BATTERY_FULL .. " ${endif} ${battery_bar} (${battery_percent}%)"
battery.short_text = "${if_existing /sys/class/power_supply/AC/online 1} " .. PLUG .. " ${else} " .. BATTERY_FULL .. " ${endif} ${battery_percent}%"
battery.color = "${if_match ${battery_percent} > 10 }" .. NORMAL .. "${else}" .. WARN .. "${endif}"
table.insert( text, battery )

local no_network = {}
no_network.full_text = "${if_match \"$gw_iface\" == \"(null)\"} Network Unavailable ${endif}"
no_network.color = WARN
table.insert( text, no_network )

local wlan = {}
wlan.full_text = "${if_up " .. WLAN_DEVICE .. "} " .. WIFI .. " ${wireless_essid} " .. network_details( WLAN_DEVICE ) .. "${endif}" 
wlan.color = NORMAL
table.insert( text, wlan )

local wired = {}
wired.full_text = "${if_up " .. WIRED_DEVICE .. "} eth " .. network_details( WIRED_DEVICE ) .. "${endif}" 
wired.color = NORMAL
table.insert( text, wired )

local weather = {}
weather.full_text = "${weather http://tgftp.nws.noaa.gov/data/observations/metar/stations/ EDDH temperature}°C " 
weather.color = NORMAL
table.insert( text, weather )

local clock = {}
clock.full_text = " ${time %d. %B %Y %R (KW%V)} "
clock.color = HIGHLIGHT
table.insert( text, clock )

-- Remove escaping of forward slash and quotes
local encoderOptions = {}
encoderOptions.strings = {}
encoderOptions.strings.encodeSet = '\\%z\1-\031'

replaceHash = {}
replaceHash[ '#' ] = '\\#'
conky.text = json.encode( text, encoderOptions ):gsub( '[#]', replaceHash ) .. ",\n"
